# Name of your application. Used to uniquely configure containers.
service: workshop-kamal2

# Name of the container image.
image: alexander.borisov/workshop-kamal2

# Deploy to these servers.
servers:
  web:
    hosts:
      - 192.168.0.2
    logging:
      driver: syslog
      options:
        syslog-address: tcp://192.168.0.8:5046
        syslog-format: rfc3164
        tag: web
  job:
    hosts:
      - 192.168.0.4
    cmd: bin/jobs
    logging:
      driver: syslog
      options:
        syslog-address: tcp://192.168.0.8:5047
        syslog-format: rfc3164
        tag: jobs
  cron:
    hosts:
      - 192.168.0.4
    cmd: bin/jobs -c config/recurring.yml
    logging:
      driver: syslog
      options:
        syslog-address: tcp://192.168.0.8:5047
        syslog-format: rfc3164
        tag: jobs

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: kamal-testbed.online
  # Proxy connects to your container on port 80 by default.
  # app_port: 3000

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  server: registry.gitlab.com
  username: alexander.borisov

  # Always use an access token rather than real password (pulled from .kamal/secrets).
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: amd64

# Inject ENV variables into containers (secrets come from .kamal/secrets).
#
env:
  clear:
    RAILS_LOG_LEVEL: info
    DB_HOST: 192.168.0.3
  secret:
    - RAILS_MASTER_KEY
    - WORKSHOP_KAMAL2_DATABASE_PASSWORD

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
aliases:
  shell: app exec --interactive --reuse "bash"
  console: app exec --interactive --reuse "bin/rails c"
  watch-logs: app logs -f

# Use a different ssh user than root
#
ssh:
  proxy: root@87.228.32.111

# Use a persistent storage volume.
#
volumes:
  - "storage:/rails/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Use accessory services (secrets come from .kamal/secrets).
#
accessories:
  db:
    image: postgres:16.1
    host: 192.168.0.3
    port: 5432
    env:
      clear:
        POSTGRES_USER: workshop_kamal2
      secret:
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data

  opensearch:
    image: opensearchproject/opensearch:latest
    host: 192.168.0.7
    port: 9200
    env:
      clear:
        cluster.name: opensearch-cluster
        discovery.type: single-node
        node.name: opensearch
        OPENSEARCH_JAVA_OPTS: "-Xms1024m -Xmx1024m"
        DISABLE_INSTALL_DEMO_CONFIG: "true"
        DISABLE_SECURITY_PLUGIN: "true"
        bootstrap.memory_lock: "true"
        network.host: "0.0.0.0"
        network.publish_host: "192.168.0.7"
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    options:
      publish:
        - "9300:9300"
        - "9400:9400"
      ulimit:
        - memlock=-1:-1
        - nofile=65536:65536

  logstash:
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:7.16.2
    host: 192.168.0.8
    port: 5045
    options:
      publish:
        - "5046:5046"
        - "5047:5047"
    env:
      clear:
        config.reload.automatic: true
        config.reload.interval: 60s
        # log.level: "debug"
    files:
      - config/deploy/logstash/rails.conf:/usr/share/logstash/pipeline/rails.conf
      - config/deploy/logstash/activejob.conf:/usr/share/logstash/pipeline/sidekiq.conf

  # To connect to Opensearch Dashboards
  # ssh -A -L 5601:192.168.0.8:5601 root@kamal-testbed.online
  # http://localhost:5601
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards
    host: 192.168.0.8
    port: 5601
    files:
      - config/deploy/opensearch_dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml

#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: valkey/valkey:8
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
