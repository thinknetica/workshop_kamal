input {
  syslog {
    port => 5046
  }
}

filter {
  grok {
    match => {
      "message" => [
        # Started request log pattern
        "I, \[%{TIMESTAMP_ISO8601:rails_timestamp} #%{NUMBER:pid}\]  %{LOGLEVEL:log_level} -- : \[%{UUID:request_id}\] Started %{WORD:http_method} \"%{URIPATHPARAM:request_path}\" for %{IP:client_ip} at %{TIMESTAMP_ISO8601:request_start_time}",
        # Processing
        "I, \[%{TIMESTAMP_ISO8601:rails_timestamp} #%{NUMBER:pid}\]  %{LOGLEVEL:log_level} -- : \[%{UUID:request_id}\] Processing by %{NOTSPACE:controller}#%{NOTSPACE:action} as %{NOTSPACE:format}",
        # Completed request log pattern
        "I, \[%{TIMESTAMP_ISO8601:rails_timestamp} #%{NUMBER:pid}\]  %{LOGLEVEL:log_level} -- : \[%{UUID:request_id}\] Completed %{NUMBER:response_status:int} %{WORD:response_message} in %{NUMBER:response_time:float}ms \(Views: %{NUMBER:views_time:float}ms \| ActiveRecord: %{NUMBER:activerecord_time:float}ms.*\)",
        # Any left pattern
        "I, \[%{TIMESTAMP_ISO8601:rails_timestamp} #%{NUMBER:pid}\]  %{LOGLEVEL:log_level} -- : \[%{UUID:request_id}\] %{GREEDYDATA:raw}"
      ]
    }
  }

  date {
    match => ["rails_timestamp", "ISO8601"]
    target => "@timestamp"
  }

  mutate {
    convert => {
      "response_status" => "integer"
      "response_time" => "float"
      "views_time" => "float"
      "activerecord_time" => "float"
    }
  }
}

output {
  opensearch {
    hosts => ["http://192.168.0.7:9200"]
    index => "rails-logs-%{+YYYY-MM-dd}"
  }
}
